{
  "version": 3,
  "file": "ngx-select-ex.umd.js",
  "sources": [
    "ng://ngx-select-ex/out/ngx-select/ngx-select.module.ts",
    "ng://ngx-select-ex/out/ngx-select/ngx-select.component.ts",
    "ng://ngx-select-ex/out/ngx-select/ngx-templates.directive.ts",
    "ng://ngx-select-ex/out/ngx-select/ngx-select.classes.ts"
  ],
  "sourcesContent": [
    "import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NGX_SELECT_OPTIONS, NgxSelectComponent} from './ngx-select.component';\r\nimport {NgxSelectOptionDirective, NgxSelectOptionNotFoundDirective, NgxSelectOptionSelectedDirective} from './ngx-templates.directive';\r\nimport {INgxSelectOptions} from './ngx-select.interfaces';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [NgxSelectComponent,\r\n        NgxSelectOptionDirective, NgxSelectOptionSelectedDirective, NgxSelectOptionNotFoundDirective\r\n    ],\r\n    exports: [NgxSelectComponent,\r\n        NgxSelectOptionDirective, NgxSelectOptionSelectedDirective, NgxSelectOptionNotFoundDirective\r\n    ]\r\n})\r\nexport class NgxSelectModule {\r\n    static forRoot(options: INgxSelectOptions): ModuleWithProviders {\r\n        return {\r\n            ngModule: NgxSelectModule,\r\n            providers: [{provide: NGX_SELECT_OPTIONS, useValue: options}]\r\n        };\r\n    }\r\n}\r\n",
    "import {\r\n    AfterContentChecked, DoCheck, Input, Output, ViewChild,\r\n    Component, ElementRef, EventEmitter, forwardRef, HostListener, IterableDiffer, IterableDiffers, ChangeDetectorRef, ContentChild,\r\n    TemplateRef, Optional, Inject, InjectionToken\r\n} from '@angular/core';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\r\nimport 'rxjs/add/observable/empty';\r\nimport 'rxjs/add/observable/from';\r\nimport 'rxjs/add/observable/of';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/operator/combineLatest';\r\nimport 'rxjs/add/operator/mergeMap';\r\nimport 'rxjs/add/operator/toArray';\r\nimport 'rxjs/add/operator/filter';\r\nimport 'rxjs/add/operator/share';\r\nimport 'rxjs/add/operator/merge';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/do';\r\nimport * as lodashNs from 'lodash';\r\nimport * as escapeStringNs from 'escape-string-regexp';\r\nimport {NgxSelectOptGroup, NgxSelectOption, TSelectOption} from './ngx-select.classes';\r\nimport {NgxSelectOptionDirective, NgxSelectOptionNotFoundDirective, NgxSelectOptionSelectedDirective} from './ngx-templates.directive';\r\nimport {INgxOptionNavigated, INgxSelectOption, INgxSelectOptions} from './ngx-select.interfaces';\r\n\r\nconst _ = lodashNs;\r\nconst escapeString = escapeStringNs;\r\n\r\nexport const NGX_SELECT_OPTIONS = new InjectionToken<any>('NGX_SELECT_OPTIONS');\r\n\r\nexport interface INgxSelectComponentMouseEvent extends MouseEvent {\r\n    clickedSelectComponent?: NgxSelectComponent;\r\n}\r\n\r\nenum ENavigation {\r\n    first, previous, next, last,\r\n    firstSelected, firstIfOptionActiveInvisible\r\n}\r\n\r\nfunction propertyExists(obj: Object, propertyName: string) {\r\n    return propertyName in obj;\r\n}\r\n\r\n@Component({\r\n    selector: 'ngx-select',\r\n    template: `<div #main [tabindex]=\"disabled? -1: 0\" class=\"ngx-select dropdown\"\r\n     [ngClass]=\"setFormControlSize({\r\n        'ngx-select_multiple form-control': multiple === true,\r\n        'open show': optionsOpened && optionsFiltered.length\r\n     }, multiple === true)\"\r\n     (click)=\"mainClicked($event)\" (focusin)=\"mainClicked($event)\"\r\n     (focus)=\"focusToInput()\" (keydown)=\"inputKeyDown($event)\"\r\n     (keyup)=\"mainKeyUp($event)\">\r\n    <div [ngClass]=\"{ 'ngx-select__disabled': disabled}\"></div>\r\n\r\n    <!-- single selected item -->\r\n    <div class=\"ngx-select__selected\"\r\n         *ngIf=\"(multiple === false) && (!optionsOpened || noAutoComplete)\">\r\n        <div class=\"ngx-select__toggle btn form-control\" [ngClass]=\"setFormControlSize(setBtnSize())\"\r\n             (click)=\"optionsOpen()\">\r\n\r\n            <span *ngIf=\"!optionsSelected.length\" class=\"ngx-select__placeholder text-muted\">\r\n                <span [innerHtml]=\"placeholder\"></span>\r\n            </span>\r\n            <span *ngIf=\"optionsSelected.length\"\r\n                  class=\"ngx-select__selected-single pull-left float-left\"\r\n                  [ngClass]=\"{'ngx-select__allow-clear': allowClear}\">\r\n                <ng-container [ngTemplateOutlet]=\"templateSelectedOption || defaultTemplateOption\"\r\n                              [ngTemplateOutletContext]=\"{$implicit: optionsSelected[0], index: 0,\r\n                                                          text: sanitize(optionsSelected[0].text)}\">\r\n                </ng-container>\r\n            </span>\r\n            <span class=\"ngx-select__toggle-buttons\">\r\n                <a class=\"ngx-select__clear btn btn-sm btn-link\" *ngIf=\"canClearNotMultiple()\"\r\n                   [ngClass]=\"setBtnSize()\"\r\n                   (click)=\"optionRemove(optionsSelected[0], $event)\">\r\n                    <i class=\"ngx-select__clear-icon\"></i>\r\n                </a>\r\n                <i class=\"dropdown-toggle\"></i>\r\n                <i class=\"ngx-select__toggle-caret caret\"></i>\r\n            </span>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- multiple selected items -->\r\n    <div class=\"ngx-select__selected\" *ngIf=\"multiple === true\">\r\n        <span *ngFor=\"let option of optionsSelected; trackBy: trackByOption; let idx = index\">\r\n            <span tabindex=\"-1\" [ngClass]=\"setBtnSize()\"\r\n                  class=\"ngx-select__selected-plural btn btn-default btn-secondary btn-xs\">\r\n\r\n                <ng-container [ngTemplateOutlet]=\"templateSelectedOption || defaultTemplateOption\"\r\n                              [ngTemplateOutletContext]=\"{$implicit: option, index: idx, text: sanitize(option.text)}\">\r\n                </ng-container>\r\n\r\n                <a class=\"ngx-select__clear btn btn-sm btn-link pull-right float-right\" [ngClass]=\"setBtnSize()\"\r\n                   (click)=\"optionRemove(option, $event)\">\r\n                    <i class=\"ngx-select__clear-icon\"></i>\r\n                </a>\r\n            </span>\r\n        </span>\r\n    </div>\r\n\r\n    <!-- live search an item from the list -->\r\n    <input #input type=\"text\" class=\"ngx-select__search form-control\" [ngClass]=\"setFormControlSize()\"\r\n           *ngIf=\"checkInputVisibility()\"\r\n           [tabindex]=\"multiple === false? -1: 0\"\r\n           (keydown)=\"inputKeyDown($event)\"\r\n           (keyup)=\"inputKeyUp(input.value)\"\r\n           (input)=\"doInputText(input.value)\"\r\n           [disabled]=\"disabled\"\r\n           [placeholder]=\"optionsSelected.length? '': placeholder\"\r\n           (click)=\"inputClick(input.value)\"\r\n           autocomplete=\"off\"\r\n           autocorrect=\"off\"\r\n           autocapitalize=\"off\"\r\n           spellcheck=\"false\"\r\n           role=\"combobox\">\r\n\r\n    <!-- options template -->\r\n    <ul #choiceMenu role=\"menu\" *ngIf=\"isFocused\" class=\"ngx-select__choices dropdown-menu\"\r\n        [class.show]=\"optionsOpened\">\r\n        <li class=\"ngx-select__item-group\" role=\"menuitem\"\r\n            *ngFor=\"let opt of optionsFiltered; trackBy: trackByOption; let idxGroup=index\">\r\n            <div class=\"divider dropdown-divider\" *ngIf=\"opt.type === 'optgroup' && (idxGroup > 0)\"></div>\r\n            <div class=\"dropdown-header\" *ngIf=\"opt.type === 'optgroup'\">{{opt.label}}</div>\r\n\r\n            <a href=\"#\" #choiceItem class=\"ngx-select__item dropdown-item\"\r\n               *ngFor=\"let option of (opt.optionsFiltered || [opt]); trackBy: trackByOption; let idxOption = index\"\r\n               [ngClass]=\"{\r\n                    'ngx-select__item_active active': isOptionActive(option, choiceItem),\r\n                    'ngx-select__item_disabled disabled': option.disabled\r\n               }\"\r\n               (mouseenter)=\"optionActivate({\r\n                    activeOption: option,\r\n                    filteredOptionList: optionsFiltered,\r\n                    index: optionsFiltered.indexOf(option)\r\n               })\"\r\n               (click)=\"optionSelect(option, $event)\">\r\n                <ng-container [ngTemplateOutlet]=\"templateOption || defaultTemplateOption\"\r\n                              [ngTemplateOutletContext]=\"{$implicit: option, text: highlightOption(option),\r\n                              index: idxGroup, subIndex: idxOption}\"></ng-container>\r\n            </a>\r\n        </li>\r\n        <li class=\"ngx-select__item ngx-select__item_no-found dropdown-header\" *ngIf=\"!optionsFiltered.length\">\r\n            <ng-container [ngTemplateOutlet]=\"templateOptionNotFound || defaultTemplateOptionNotFound\"\r\n                          [ngTemplateOutletContext]=\"{$implicit: inputText}\"></ng-container>\r\n        </li>\r\n    </ul>\r\n\r\n    <!--Default templates-->\r\n    <ng-template #defaultTemplateOption let-text=\"text\">\r\n        <span [innerHtml]=\"text\"></span>\r\n    </ng-template>\r\n\r\n    <ng-template #defaultTemplateOptionNotFound>\r\n        {{noResultsFound}}\r\n    </ng-template>\r\n\r\n</div>\r\n`,\r\n    styles: [`.ngx-select_multiple{height:auto;padding:3px 3px 0}.ngx-select_multiple .ngx-select__search{background-color:transparent!important;border:none;outline:0;-webkit-box-shadow:none;box-shadow:none;height:1.6666em;padding:0;margin-bottom:3px}.ngx-select__disabled{background-color:#eceeef;border-radius:4px;position:absolute;width:100%;height:100%;z-index:5;opacity:.6;top:0;left:0;cursor:not-allowed}.ngx-select__toggle{outline:0;position:relative;text-align:left!important;color:#333;background-color:#fff;border-color:#ccc;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.ngx-select__toggle:hover{color:#333;background-color:#e6e6e6;border-color:#adadad}.ngx-select__toggle-buttons{-ms-flex-negative:0;flex-shrink:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.ngx-select__toggle-caret{position:absolute;height:10px;top:50%;right:10px;margin-top:-2px}.ngx-select__placeholder{float:left}.ngx-select__clear{margin-right:10px;padding:0;border:none}.ngx-select_multiple .ngx-select__clear{line-height:initial;margin-left:5px;margin-right:0;color:#000;opacity:.5}.ngx-select__clear-icon{display:inline-block;font-size:inherit;cursor:pointer;position:relative;width:1em;height:.75em;padding:0}.ngx-select__clear-icon:after,.ngx-select__clear-icon:before{content:'';position:absolute;border-top:3px solid;width:100%;top:50%;left:0;margin-top:-1px}.ngx-select__clear-icon:before{-webkit-transform:rotate(45deg);transform:rotate(45deg)}.ngx-select__clear-icon:after{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.ngx-select__choices{width:100%;height:auto;max-height:200px;overflow-x:hidden;margin-top:0;position:absolute}.ngx-select_multiple .ngx-select__choices{margin-top:1px}.ngx-select__item{display:block;padding:3px 20px;clear:both;font-weight:400;line-height:1.42857143;white-space:nowrap;cursor:pointer;text-decoration:none}.ngx-select__item_disabled,.ngx-select__item_no-found{cursor:default}.ngx-select__item_active{color:#fff;outline:0;background-color:#428bca}.ngx-select__selected-plural,.ngx-select__selected-single{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;overflow:hidden}.ngx-select__selected-plural span,.ngx-select__selected-single span{overflow:hidden;text-overflow:ellipsis}.ngx-select__selected-plural{outline:0;margin:0 3px 3px 0}.input-group>.dropdown{position:static}`],\r\n    providers: [\r\n        {\r\n            provide: NG_VALUE_ACCESSOR,\r\n            useExisting: forwardRef(() => NgxSelectComponent),\r\n            multi: true\r\n        }\r\n    ]\r\n})\r\nexport class NgxSelectComponent implements INgxSelectOptions, ControlValueAccessor, DoCheck, AfterContentChecked {\r\n    @Input() public items: any[];\r\n    @Input() public optionValueField = 'id';\r\n    @Input() public optionTextField = 'text';\r\n    @Input() public optGroupLabelField = 'label';\r\n    @Input() public optGroupOptionsField = 'options';\r\n    @Input() public multiple = false;\r\n    @Input() public allowClear = false;\r\n    @Input() public placeholder = '';\r\n    @Input() public noAutoComplete = false;\r\n    @Input() public disabled = false;\r\n    @Input() public defaultValue: any[] = [];\r\n    @Input() public autoSelectSingleOption = false;\r\n    @Input() public autoClearSearch = false;\r\n    @Input() public noResultsFound = 'No results found';\r\n    @Input() public size: 'small' | 'default' | 'large' = 'default';\r\n    @Input() public searchCallback: (search: string, item: INgxSelectOption) => boolean;\r\n    public keyCodeToRemoveSelected = 'Delete';\r\n    public keyCodeToOptionsOpen = 'Enter';\r\n    public keyCodeToOptionsClose = 'Escape';\r\n    public keyCodeToOptionsSelect = 'Enter';\r\n    public keyCodeToNavigateFirst = 'ArrowLeft';\r\n    public keyCodeToNavigatePrevious = 'ArrowUp';\r\n    public keyCodeToNavigateNext = 'ArrowDown';\r\n    public keyCodeToNavigateLast = 'ArrowRight';\r\n\r\n    @Output() public typed = new EventEmitter<string>();\r\n    @Output() public focus = new EventEmitter<void>();\r\n    @Output() public blur = new EventEmitter<void>();\r\n    @Output() public open = new EventEmitter<void>();\r\n    @Output() public close = new EventEmitter<void>();\r\n    @Output() public select = new EventEmitter<any>();\r\n    @Output() public remove = new EventEmitter<any>();\r\n    @Output() public navigated = new EventEmitter<INgxOptionNavigated>();\r\n    @Output() public selectionChanges = new EventEmitter<INgxSelectOption[]>();\r\n\r\n    @ViewChild('main') protected mainElRef: ElementRef;\r\n    @ViewChild('input') protected inputElRef: ElementRef;\r\n    @ViewChild('choiceMenu') protected choiceMenuElRef: ElementRef;\r\n\r\n    @ContentChild(NgxSelectOptionDirective, {read: TemplateRef}) templateOption: NgxSelectOptionDirective;\r\n    @ContentChild(NgxSelectOptionSelectedDirective, {read: TemplateRef}) templateSelectedOption: NgxSelectOptionSelectedDirective;\r\n    @ContentChild(NgxSelectOptionNotFoundDirective, {read: TemplateRef}) templateOptionNotFound: NgxSelectOptionNotFoundDirective;\r\n\r\n    public optionsOpened = false;\r\n    public optionsFiltered: TSelectOption[];\r\n\r\n    private optionActive: NgxSelectOption;\r\n    private itemsDiffer: IterableDiffer<any>;\r\n    private defaultValueDiffer: IterableDiffer<any[]>;\r\n    private actualValue: any[] = [];\r\n\r\n    public subjOptions = new BehaviorSubject<TSelectOption[]>([]);\r\n    private subjSearchText = new BehaviorSubject<string>('');\r\n\r\n    private subjOptionsSelected = new BehaviorSubject<NgxSelectOption[]>([]);\r\n    private subjExternalValue = new BehaviorSubject<any[]>([]);\r\n    private subjDefaultValue = new BehaviorSubject<any[]>([]);\r\n    private subjRegisterOnChange = new Subject();\r\n\r\n    private cacheOptionsFilteredFlat: NgxSelectOption[];\r\n    private cacheElementOffsetTop: number;\r\n\r\n    private _focusToInput = false;\r\n    public isFocused = false;\r\n\r\n    /** @internal */\r\n    public get inputText() {\r\n      if (this.inputElRef && this.inputElRef.nativeElement) {\r\n        return this.inputElRef.nativeElement.value;\r\n      }\r\n      return '';\r\n    }\r\n\r\n    constructor(iterableDiffers: IterableDiffers, private sanitizer: DomSanitizer, private cd: ChangeDetectorRef,\r\n                @Inject(NGX_SELECT_OPTIONS) @Optional() defaultOptions: INgxSelectOptions) {\r\n        Object.assign(this, defaultOptions);\r\n\r\n        // differs\r\n        this.itemsDiffer = iterableDiffers.find([]).create<any>(null);\r\n        this.defaultValueDiffer = iterableDiffers.find([]).create<any>(null);\r\n\r\n        // observers\r\n        this.typed.subscribe((text: string) => this.subjSearchText.next(text));\r\n        this.subjOptionsSelected.subscribe((options: NgxSelectOption[]) => this.selectionChanges.emit(options));\r\n        let cacheExternalValue: any[];\r\n        const subjActualValue = this.subjExternalValue\r\n            .map((v: any[]) => cacheExternalValue = v === null ? [] : [].concat(v))\r\n            .merge(this.subjOptionsSelected.map((options: NgxSelectOption[]) =>\r\n                options.map((o: NgxSelectOption) => o.value)\r\n            ))\r\n            .combineLatest(this.subjDefaultValue, (eVal: any[], dVal: any[]) => {\r\n                const newVal = _.isEqual(eVal, dVal) ? [] : eVal;\r\n                return newVal.length ? newVal : dVal;\r\n            })\r\n            .distinctUntilChanged((x, y) => _.isEqual(x, y))\r\n            .share();\r\n\r\n        subjActualValue\r\n            .combineLatest(this.subjRegisterOnChange, (actualValue: any[]) => actualValue)\r\n            .subscribe((actualValue: any[]) => {\r\n                this.actualValue = actualValue;\r\n                if (!_.isEqual(actualValue, cacheExternalValue)) {\r\n                    cacheExternalValue = actualValue;\r\n                    if (this.multiple) {\r\n                        this.onChange(actualValue);\r\n                    } else {\r\n                        this.onChange(actualValue.length ? actualValue[0] : null);\r\n                    }\r\n                }\r\n            });\r\n\r\n        this.subjOptions\r\n            .flatMap((options: TSelectOption[]) => Observable\r\n                .from(options)\r\n                .flatMap((option: TSelectOption) => option instanceof NgxSelectOption\r\n                    ? Observable.of(option)\r\n                    : (option instanceof NgxSelectOptGroup ? Observable.from(option.options) : Observable.empty())\r\n                )\r\n                .toArray()\r\n            )\r\n            .combineLatest(subjActualValue, (optionsFlat: NgxSelectOption[], actualValue: any[]) => {\r\n                Observable.from(optionsFlat)\r\n                    .filter((option: NgxSelectOption) => actualValue.indexOf(option.value) !== -1)\r\n                    .toArray()\r\n                    .filter((options: NgxSelectOption[]) => !_.isEqual(options, this.subjOptionsSelected.value))\r\n                    .subscribe((options: NgxSelectOption[]) => this.subjOptionsSelected.next(options));\r\n            })\r\n            .subscribe();\r\n\r\n        this.subjOptions\r\n            .combineLatest(this.subjOptionsSelected, this.subjSearchText,\r\n                (options: TSelectOption[], selectedOptions: NgxSelectOption[], search: string) => {\r\n                    this.optionsFiltered = this.filterOptions(search, options, selectedOptions);\r\n                    this.cacheOptionsFilteredFlat = null;\r\n                    this.navigateOption(ENavigation.firstIfOptionActiveInvisible);\r\n                    return selectedOptions;\r\n                }\r\n            )\r\n            .flatMap((selectedOptions: NgxSelectOption[]) => {\r\n                return this.optionsFilteredFlat().filter((flatOptions: NgxSelectOption[]) =>\r\n                    this.autoSelectSingleOption && flatOptions.length === 1 && !selectedOptions.length\r\n                );\r\n            })\r\n            .subscribe((flatOptions: NgxSelectOption[]) => this.subjOptionsSelected.next(flatOptions));\r\n    }\r\n\r\n    public setFormControlSize(otherClassNames: Object = {}, useFormControl: boolean = true) {\r\n        const formControlExtraClasses = useFormControl ? {\r\n            'form-control-sm input-sm': this.size === 'small',\r\n            'form-control-lg input-lg': this.size === 'large'\r\n        } : {};\r\n        return Object.assign(formControlExtraClasses, otherClassNames);\r\n    }\r\n\r\n    public setBtnSize() {\r\n        return {'btn-sm': this.size === 'small', 'btn-lg': this.size === 'large'};\r\n    }\r\n\r\n    public get optionsSelected(): NgxSelectOption[] {\r\n        return this.subjOptionsSelected.value;\r\n    }\r\n\r\n    public mainClicked(event: INgxSelectComponentMouseEvent) {\r\n        event.clickedSelectComponent = this;\r\n        if (!this.isFocused) {\r\n            this.isFocused = true;\r\n            this.focus.emit();\r\n        }\r\n    }\r\n\r\n    @HostListener('document:focusin', ['$event'])\r\n    @HostListener('document:click', ['$event'])\r\n    public documentClick(event: INgxSelectComponentMouseEvent) {\r\n        if (event.clickedSelectComponent !== this) {\r\n            if (this.optionsOpened) {\r\n                this.optionsClose();\r\n                this.cd.detectChanges(); // fix error because of delay between different events\r\n            }\r\n            if (this.isFocused) {\r\n                this.isFocused = false;\r\n                this.blur.emit();\r\n            }\r\n        }\r\n    }\r\n\r\n    private optionsFilteredFlat(): Observable<NgxSelectOption[]> {\r\n        if (this.cacheOptionsFilteredFlat) {\r\n            return Observable.of(this.cacheOptionsFilteredFlat);\r\n        }\r\n\r\n        return Observable.from(this.optionsFiltered)\r\n            .flatMap<TSelectOption, NgxSelectOption>((option: TSelectOption) =>\r\n                option instanceof NgxSelectOption ? Observable.of(option) :\r\n                    (option instanceof NgxSelectOptGroup ? Observable.from(option.optionsFiltered) : Observable.empty())\r\n            )\r\n            .filter((optionsFilteredFlat: NgxSelectOption) => !optionsFilteredFlat.disabled)\r\n            .toArray()\r\n            .do((optionsFilteredFlat: NgxSelectOption[]) => this.cacheOptionsFilteredFlat = optionsFilteredFlat);\r\n    }\r\n\r\n    private navigateOption(navigation: ENavigation) {\r\n        this.optionsFilteredFlat()\r\n            .map<NgxSelectOption[], INgxOptionNavigated>((options: NgxSelectOption[]) => {\r\n                const navigated: INgxOptionNavigated = {index: -1, activeOption: null, filteredOptionList: options};\r\n                let newActiveIdx;\r\n                switch (navigation) {\r\n                    case ENavigation.first:\r\n                        navigated.index = 0;\r\n                        break;\r\n                    case ENavigation.previous:\r\n                        newActiveIdx = options.indexOf(this.optionActive) - 1;\r\n                        navigated.index = newActiveIdx >= 0 ? newActiveIdx : options.length - 1;\r\n                        break;\r\n                    case ENavigation.next:\r\n                        newActiveIdx = options.indexOf(this.optionActive) + 1;\r\n                        navigated.index = newActiveIdx < options.length ? newActiveIdx : 0;\r\n                        break;\r\n                    case ENavigation.last:\r\n                        navigated.index = options.length - 1;\r\n                        break;\r\n                    case ENavigation.firstSelected:\r\n                        if (this.subjOptionsSelected.value.length) {\r\n                            navigated.index = options.indexOf(this.subjOptionsSelected.value[0]);\r\n                        }\r\n                        break;\r\n                    case ENavigation.firstIfOptionActiveInvisible:\r\n                        const idxOfOptionActive = options.indexOf(this.optionActive);\r\n                        navigated.index = idxOfOptionActive > 0 ? idxOfOptionActive : 0;\r\n                        break;\r\n                }\r\n                navigated.activeOption = options[navigated.index];\r\n                return navigated;\r\n            })\r\n            .subscribe((newNavigated: INgxOptionNavigated) => this.optionActivate(newNavigated));\r\n    }\r\n\r\n    public ngDoCheck(): void {\r\n        if (this.itemsDiffer.diff(this.items)) {\r\n            this.subjOptions.next(this.buildOptions(this.items));\r\n        }\r\n\r\n        const defVal = this.defaultValue ? [].concat(this.defaultValue) : [];\r\n        if (this.defaultValueDiffer.diff(defVal)) {\r\n            this.subjDefaultValue.next(defVal);\r\n        }\r\n    }\r\n\r\n    public ngAfterContentChecked(): void {\r\n        if (this._focusToInput && this.checkInputVisibility() && this.inputElRef &&\r\n            this.inputElRef.nativeElement !== document.activeElement) {\r\n            this._focusToInput = false;\r\n            this.inputElRef.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    public canClearNotMultiple(): boolean {\r\n        return this.allowClear && !!this.subjOptionsSelected.value.length &&\r\n            (!this.subjDefaultValue.value.length || this.subjDefaultValue.value[0] !== this.actualValue[0]);\r\n    }\r\n\r\n    public focusToInput(): void {\r\n        this._focusToInput = true;\r\n    }\r\n\r\n    public inputKeyDown(event: KeyboardEvent) {\r\n        const keysForOpenedState = [\r\n            this.keyCodeToOptionsSelect,\r\n            this.keyCodeToNavigateFirst,\r\n            this.keyCodeToNavigatePrevious,\r\n            this.keyCodeToNavigateNext,\r\n            this.keyCodeToNavigateLast,\r\n        ];\r\n        const keysForClosedState = [this.keyCodeToOptionsOpen, this.keyCodeToRemoveSelected];\r\n\r\n        if (this.optionsOpened && keysForOpenedState.indexOf(event.code) !== -1) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            switch (event.code) {\r\n                case this.keyCodeToOptionsSelect:\r\n                    this.optionSelect(this.optionActive);\r\n                    this.navigateOption(ENavigation.next);\r\n                    break;\r\n                case this.keyCodeToNavigateFirst:\r\n                    this.navigateOption(ENavigation.first);\r\n                    break;\r\n                case this.keyCodeToNavigatePrevious:\r\n                    this.navigateOption(ENavigation.previous);\r\n                    break;\r\n                case this.keyCodeToNavigateLast:\r\n                    this.navigateOption(ENavigation.last);\r\n                    break;\r\n                case this.keyCodeToNavigateNext:\r\n                    this.navigateOption(ENavigation.next);\r\n                    break;\r\n            }\r\n        } else if (!this.optionsOpened && keysForClosedState.indexOf(event.code) !== -1) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            switch (event.code) {\r\n                case this.keyCodeToOptionsOpen:\r\n                    this.optionsOpen();\r\n                    break;\r\n                case this.keyCodeToRemoveSelected:\r\n                    this.optionRemove(this.subjOptionsSelected.value[this.subjOptionsSelected.value.length - 1], event);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    public mainKeyUp(event: KeyboardEvent): void {\r\n        if (event.code === this.keyCodeToOptionsClose) {\r\n            this.optionsClose(/*true*/);\r\n        }\r\n    }\r\n\r\n    public trackByOption(index: number, option: TSelectOption) {\r\n        return option instanceof NgxSelectOption ? option.value :\r\n            (option instanceof NgxSelectOptGroup ? option.label : option);\r\n    }\r\n\r\n    public checkInputVisibility(): boolean {\r\n        return (this.multiple === true) || (this.optionsOpened && !this.noAutoComplete);\r\n    }\r\n\r\n    /** @internal */\r\n    public inputKeyUp(value: string = '') {\r\n        if (!this.optionsOpened && value) {\r\n            this.optionsOpen(value);\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    public doInputText(value: string) {\r\n        if (this.optionsOpened) {\r\n            this.typed.emit(value);\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    public inputClick(value: string = '') {\r\n        if (!this.optionsOpened) {\r\n            this.optionsOpen(value);\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    public sanitize(html: string): SafeHtml {\r\n        return html ? this.sanitizer.bypassSecurityTrustHtml(html) : null;\r\n    }\r\n\r\n    /** @internal */\r\n    public highlightOption(option: NgxSelectOption): SafeHtml {\r\n        if (this.inputElRef) {\r\n            return option.renderText(this.sanitizer, this.inputElRef.nativeElement.value);\r\n        }\r\n        return option.renderText(this.sanitizer, '');\r\n    }\r\n\r\n    /** @internal */\r\n    public optionSelect(option: NgxSelectOption, event: Event = null): void {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        if (option && !option.disabled) {\r\n            this.subjOptionsSelected.next((this.multiple ? this.subjOptionsSelected.value : []).concat([option]));\r\n            this.select.emit(option.value);\r\n            this.optionsClose(/*true*/);\r\n            this.onTouched();\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    public optionRemove(option: NgxSelectOption, event: Event): void {\r\n        if (!this.disabled && option) {\r\n            event.stopPropagation();\r\n            this.subjOptionsSelected.next((this.multiple ? this.subjOptionsSelected.value : []).filter(o => o !== option));\r\n            this.remove.emit(option.value);\r\n        }\r\n    }\r\n\r\n    /** @internal */\r\n    public isOptionActive(option: NgxSelectOption, element: HTMLElement) {\r\n        if (this.optionActive === option) {\r\n            this.ensureVisibleElement(element);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /** @internal */\r\n    public optionActivate(navigated: INgxOptionNavigated): void {\r\n        if ((this.optionActive !== navigated.activeOption) &&\r\n            (!navigated.activeOption || !navigated.activeOption.disabled)) {\r\n            this.optionActive = navigated.activeOption;\r\n            this.navigated.emit(navigated);\r\n        }\r\n    }\r\n\r\n    private filterOptions(search: string, options: TSelectOption[], selectedOptions: NgxSelectOption[]): TSelectOption[] {\r\n        const regExp = new RegExp(escapeString(search), 'i'),\r\n            filterOption = (option: NgxSelectOption) => {\r\n                if (this.searchCallback) {\r\n                    return this.searchCallback(search, option);\r\n                }\r\n                return (!search || regExp.test(option.text)) && (!this.multiple || selectedOptions.indexOf(option) === -1);\r\n            };\r\n\r\n        return options.filter((option: TSelectOption) => {\r\n            if (option instanceof NgxSelectOption) {\r\n                return filterOption(<NgxSelectOption>option);\r\n            } else if (option instanceof NgxSelectOptGroup) {\r\n                const subOp = <NgxSelectOptGroup>option;\r\n                subOp.filter((subOption: NgxSelectOption) => filterOption(subOption));\r\n                return subOp.optionsFiltered.length;\r\n            }\r\n        });\r\n    }\r\n\r\n    private ensureVisibleElement(element: HTMLElement) {\r\n        if (this.choiceMenuElRef && this.cacheElementOffsetTop !== element.offsetTop) {\r\n            this.cacheElementOffsetTop = element.offsetTop;\r\n            const container: HTMLElement = this.choiceMenuElRef.nativeElement;\r\n            if (this.cacheElementOffsetTop < container.scrollTop) {\r\n                container.scrollTop = this.cacheElementOffsetTop;\r\n            } else if (this.cacheElementOffsetTop + element.offsetHeight > container.scrollTop + container.clientHeight) {\r\n                container.scrollTop = this.cacheElementOffsetTop + element.offsetHeight - container.clientHeight;\r\n            }\r\n        }\r\n    }\r\n\r\n    public optionsOpen(search: string = '') {\r\n        if (!this.disabled) {\r\n            this.optionsOpened = true;\r\n            this.subjSearchText.next(search);\r\n            if (!this.multiple && this.subjOptionsSelected.value.length) {\r\n                this.navigateOption(ENavigation.firstSelected);\r\n            } else {\r\n                this.navigateOption(ENavigation.first);\r\n            }\r\n            this.focusToInput();\r\n            this.open.emit();\r\n        }\r\n    }\r\n\r\n    public optionsClose(/*focusToHost: boolean = false*/) {\r\n        this.optionsOpened = false;\r\n        // if (focusToHost) {\r\n        //     const x = window.scrollX, y = window.scrollY;\r\n        //     this.mainElRef.nativeElement.focus();\r\n        //     window.scrollTo(x, y);\r\n        // }\r\n        this.close.emit();\r\n\r\n        if (this.autoClearSearch && this.multiple && this.inputElRef) {\r\n            this.inputElRef.nativeElement.value = null;\r\n        }\r\n    }\r\n\r\n    private buildOptions(data: any[]): Array<NgxSelectOption | NgxSelectOptGroup> {\r\n        const result: Array<NgxSelectOption | NgxSelectOptGroup> = [];\r\n        if (Array.isArray(data)) {\r\n            let option: NgxSelectOption;\r\n            data.forEach((item: any) => {\r\n                const isOptGroup = typeof item === 'object' && item !== null &&\r\n                    propertyExists(item, this.optGroupLabelField) && propertyExists(item, this.optGroupOptionsField) &&\r\n                    Array.isArray(item[this.optGroupOptionsField]);\r\n                if (isOptGroup) {\r\n                    const optGroup = new NgxSelectOptGroup(item[this.optGroupLabelField]);\r\n                    item[this.optGroupOptionsField].forEach((subOption: NgxSelectOption) => {\r\n                        if (option = this.buildOption(subOption, optGroup)) {\r\n                            optGroup.options.push(option);\r\n                        }\r\n                    });\r\n                    result.push(optGroup);\r\n                } else if (option = this.buildOption(item, null)) {\r\n                    result.push(option);\r\n                }\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildOption(data: any, parent: NgxSelectOptGroup): NgxSelectOption {\r\n        let value, text, disabled;\r\n        if (typeof data === 'string' || typeof data === 'number') {\r\n            value = text = data;\r\n            disabled = false;\r\n        } else if (typeof data === 'object' && data !== null &&\r\n            (propertyExists(data, this.optionValueField) || propertyExists(data, this.optionTextField))) {\r\n            value = propertyExists(data, this.optionValueField) ? data[this.optionValueField] : data[this.optionTextField];\r\n            text = propertyExists(data, this.optionTextField) ? data[this.optionTextField] : data[this.optionValueField];\r\n            disabled = propertyExists(data, 'disabled') ? data['disabled'] : false;\r\n        } else {\r\n            return null;\r\n        }\r\n        return new NgxSelectOption(value, text, disabled, data, parent);\r\n    }\r\n\r\n    //////////// interface ControlValueAccessor ////////////\r\n    public onChange = (v: any) => v;\r\n\r\n    public onTouched: () => void = () => null;\r\n\r\n    public writeValue(obj: any): void {\r\n        this.subjExternalValue.next(obj);\r\n    }\r\n\r\n    public registerOnChange(fn: (_: any) => {}): void {\r\n        this.onChange = fn;\r\n        this.subjRegisterOnChange.next();\r\n    }\r\n\r\n    public registerOnTouched(fn: () => {}): void {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    public setDisabledState(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n}\r\n",
    "import {Directive, TemplateRef} from '@angular/core';\r\n\r\n@Directive({selector: '[ngx-select-option]'})\r\nexport class NgxSelectOptionDirective {\r\n    constructor(public template: TemplateRef<any>) {\r\n    }\r\n}\r\n\r\n@Directive({selector: '[ngx-select-option-selected]'})\r\nexport class NgxSelectOptionSelectedDirective {\r\n    constructor(public template: TemplateRef<any>) {\r\n    }\r\n}\r\n\r\n@Directive({selector: '[ngx-select-option-not-found]'})\r\nexport class NgxSelectOptionNotFoundDirective {\r\n    constructor(public template: TemplateRef<any>) {\r\n    }\r\n}\r\n",
    "import {DomSanitizer, SafeHtml} from '@angular/platform-browser';\r\nimport * as escapeStringNs from 'escape-string-regexp';\r\nimport {INgxSelectOptGroup, INgxSelectOption, INgxSelectOptionBase, TNgxSelectOptionType} from './ngx-select.interfaces';\r\n\r\nconst escapeString = escapeStringNs;\r\n\r\nexport class NgxSelectOption implements INgxSelectOption, INgxSelectOptionBase {\r\n    readonly type: TNgxSelectOptionType = 'option';\r\n\r\n    constructor(public value: number | string,\r\n                public text: string,\r\n                public disabled: boolean,\r\n                public data: any,\r\n                private _parent: NgxSelectOptGroup = null) {\r\n    }\r\n\r\n    public get parent(): NgxSelectOptGroup {\r\n        return this._parent;\r\n    }\r\n\r\n    private cacheHighlightText: string;\r\n    private cacheRenderedText: SafeHtml = null;\r\n\r\n    public renderText(sanitizer: DomSanitizer, highlightText: string): SafeHtml {\r\n        if (this.cacheHighlightText !== highlightText || this.cacheRenderedText === null) {\r\n            this.cacheHighlightText = highlightText;\r\n            if (this.cacheHighlightText) {\r\n                this.cacheRenderedText = sanitizer.bypassSecurityTrustHtml((this.text + '').replace(\r\n                    new RegExp(escapeString(this.cacheHighlightText), 'gi'), '<strong>$&</strong>'\r\n                ));\r\n            } else {\r\n                this.cacheRenderedText = sanitizer.bypassSecurityTrustHtml(this.text);\r\n            }\r\n        }\r\n        return this.cacheRenderedText;\r\n    }\r\n}\r\n\r\nexport class NgxSelectOptGroup implements INgxSelectOptGroup, INgxSelectOptionBase {\r\n    readonly type: TNgxSelectOptionType = 'optgroup';\r\n\r\n    public optionsFiltered: NgxSelectOption[];\r\n\r\n    constructor(public label: string,\r\n                public options: NgxSelectOption[] = []) {\r\n        this.filter(() => true);\r\n    }\r\n\r\n    public filter(callbackFn: (value: NgxSelectOption) => any): void {\r\n        this.optionsFiltered = this.options.filter((option: NgxSelectOption) => callbackFn(option));\r\n    }\r\n}\r\n\r\nexport type TSelectOption = NgxSelectOptGroup | NgxSelectOption;\r\n"
  ],
  "names": [
    "CommonModule",
    "NgModule",
    "HostListener",
    "ContentChild",
    "TemplateRef",
    "ViewChild",
    "Output",
    "Input",
    "Inject",
    "Optional",
    "ChangeDetectorRef",
    "DomSanitizer",
    "IterableDiffers",
    "forwardRef",
    "NG_VALUE_ACCESSOR",
    "Component",
    "escapeString",
    "Observable",
    "Subject",
    "BehaviorSubject",
    "EventEmitter",
    "InjectionToken",
    "Directive"
  ],
  "mappings": "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"
}
